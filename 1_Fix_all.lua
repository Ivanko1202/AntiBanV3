
-- PyDeath Advanced Crypto Stub
local key = "82((ksoagXUWQ715wnxp0qbti3akdnBwJ6wiqkkwb3"
local function unshuffle(str, seed)
    local t, idx = {}, {}
    for i = 1, #str do table.insert(t, str:sub(i,i)) end
    math.randomseed(seed)
    for i = 1, #t do table.insert(idx, i) end
    for i = #idx, 2, -1 do
        local j = math.random(i)
        idx[i], idx[j] = idx[j], idx[i]
    end
    local r = {} for i = 1, #t do r[idx[i]] = t[i] end
    return table.concat(r)
end

local function b64decode(data)
    local b='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    data = data:gsub('[^'..b..'=]', '')
    return (data:gsub('.', function(x)
        if (x == '=') then return '' end
        local r,f='',(b:find(x)-1)
        for i=6,1,-1 do r=r..(math.floor(f/2^(i-1))%2) end
        return r
    end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
        if (#x ~= 8) then return '' end
        local c=0
        for i=1,8 do c=c + (x:sub(i,i)=='1' and 2^(8-i) or 0) end
        return string.char(c)
    end))
end

local function xor_decrypt(data, key)
    local out = ""
    for i = 1, #data do
        local k = key:byte((i - 1) % #key + 1)
        local d = data:byte(i)
        out = out .. string.char(bit32.bxor(d, k))
    end
    return out
end

local enc = "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"
local stage1 = unshuffle(enc, 1337)
local stage2 = b64decode(stage1)
local final = xor_decrypt(stage2, key)
loadstring(final)()